apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.versions.compileSdkVersion
    buildToolsVersion rootProject.ext.versions.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.versions.minSdkVersion
        targetSdkVersion rootProject.ext.versions.targetSdkVersion
        versionCode rootProject.ext.versions.versionCode
        versionName rootProject.ext.versions.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        //MultiDex分包方法
        multiDexEnabled true

        buildConfigField 'String', 'UMengKey', String.valueOf(rootProject.ext.keys["uMengkey"])
        buildConfigField 'String', 'UMengChannel', String.valueOf(rootProject.ext.keys["uMengChannel"])
        buildConfigField 'Boolean', 'needUMengShare',"${rootProject.ext.isNeedUMengShare}"

        buildConfigField 'String', 'WXKey', String.valueOf(rootProject.ext.keys["WXKey"])
        buildConfigField 'String', 'WXSecret', String.valueOf(rootProject.ext.keys["WXSecret"])
        buildConfigField 'String', 'WBKey', String.valueOf(rootProject.ext.keys["WBKey"])
        buildConfigField 'String', 'WBSecret', String.valueOf(rootProject.ext.keys["WBSecret"])
        buildConfigField 'String', 'WBCallBack', String.valueOf(rootProject.ext.keys["WBCallBack"])
        buildConfigField 'String', 'QQKey', String.valueOf(rootProject.ext.keys["QQKey"])
        buildConfigField 'String', 'QQSecret', String.valueOf(rootProject.ext.keys["QQSecret"])

        buildConfigField 'String', 'dbName', String.valueOf(rootProject.ext.databaseName)

        //Arouter路由配置
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
                includeCompileClasspath = true
            }
        }

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    //防止编译的时候oom、GC
    dexOptions {
        javaMaxHeapSize "4g"
    }


}

dependencies {
    // 在项目中的libs中的所有的.jar结尾的文件，都是依赖
    compile fileTree(include: ['*.jar'], dir: 'libs')
    //把implementation 用api代替,它是对外部公开的, 所有其他的module就不需要添加该依赖
    api rootProject.ext.dependencies["appcompat_v7"]
    api rootProject.ext.dependencies["constraint_layout"]
    api rootProject.ext.dependencies["cardview-v7"]
    api rootProject.ext.dependencies["recyclerview-v7"]
    api rootProject.ext.dependencies["support-v4"]
    api rootProject.ext.dependencies["design"]
    api rootProject.ext.dependencies["support_annotations"]
    api rootProject.ext.dependencies["junit"]
    api rootProject.ext.dependencies["espresso_core"]
    //MultiDex分包方法
    api rootProject.ext.dependencies["multidex"]
    //黄油刀
    annotationProcessor rootProject.ext.dependencies["butterknife_compiler"]
    api rootProject.ext.dependencies["butterknife"]
    //Arouter路由
    annotationProcessor rootProject.ext.dependencies["arouter_compiler"]
    api rootProject.ext.dependencies["arouter_api"]
    api rootProject.ext.dependencies["arouter_annotation"]
    //eventbus 发布/订阅事件总线
    if (rootProject.ext.isNeedEventBus.toBoolean()) {
        api rootProject.ext.dependencies["eventbus"]
    }
    //网络
    api rootProject.ext.dependencies["okhttp"]
    api rootProject.ext.dependencies["okhttploggerIntecept"]
    api rootProject.ext.dependencies["retrofit"]
    api rootProject.ext.dependencies["retrofitConvert"]
    api rootProject.ext.dependencies["retrofitAdapt"]
    api rootProject.ext.dependencies["rxjava"]
    api rootProject.ext.dependencies["rxAndroid"]
    //日志
    api rootProject.ext.dependencies["logger"]
    //图片加载
    api rootProject.ext.dependencies["glide"]
    api rootProject.ext.dependencies["glide_okhttp"]
    annotationProcessor rootProject.ext.dependencies["glide_compiler"]
    //GreenDao
    if (rootProject.ext.isNeedGreenDao.toBoolean()) {
        api rootProject.ext.dependencies["greenDao"]
    }
    if (rootProject.ext.isNeedDagger.toBoolean()) {
        api rootProject.ext.dependencies["dagger"]
        annotationProcessor rootProject.ext.dependencies["daggerCompile"]
    }
    //友盟
    api rootProject.ext.dependencies["uMeng"]
    api rootProject.ext.dependencies["uMengCommon"]
    if (rootProject.ext.isNeedUMengShare.toBoolean()) {
        api rootProject.ext.dependencies["uMengShare_Core"]
        api rootProject.ext.dependencies["uMengShare_QQ"]
        api(rootProject.ext.dependencies["uMengShare_WeChat"])/* {
            exclude group: 'com.tencent.mm.opensdk',module: 'wechat-sdk-android-with-mta'
        }*/
        api rootProject.ext.dependencies["uMengShare_Sina"]
        api rootProject.ext.dependencies["uMengShare_Widget"]
        implementation files('libs/umeng-share-email-6.9.4.jar')
        implementation files('libs/umeng-share-sms-6.9.4.jar')
    }
    //极光推送
    api rootProject.ext.dependencies["jpush"]
    api rootProject.ext.dependencies["jpushCore"]
    api rootProject.ext.dependencies["pay"]
    api rootProject.ext.dependencies["qr"]
    api rootProject.ext.dependencies["permission"]
    api rootProject.ext.dependencies["util"]
    api(rootProject.ext.dependencies["boxing"]) {
        exclude group: 'com.liux.android', module: 'glide'
    }
    api rootProject.ext.dependencies["proguard"]
    api project(':datemodule')
}
