apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.versions.compileSdkVersion
    buildToolsVersion rootProject.ext.versions.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.versions.minSdkVersion
        targetSdkVersion rootProject.ext.versions.targetSdkVersion
        versionCode rootProject.ext.versions.versionCode
        versionName rootProject.ext.versions.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        //MultiDex分包方法
        multiDexEnabled true

        buildConfigField  'String','UMengKey',String.valueOf(rootProject.ext.keys["uMengkey"])
        buildConfigField  'String','UMengChannel',String.valueOf(rootProject.ext.keys["uMengChannel"])

        //Arouter路由配置
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
                includeCompileClasspath = true
            }
        }

    }

    buildTypes {
            release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    //防止编译的时候oom、GC
    dexOptions {
        javaMaxHeapSize "4g"
    }


}

dependencies {
    // 在项目中的libs中的所有的.jar结尾的文件，都是依赖
    compile fileTree(include: ['*.jar'], dir: 'libs')
    //把implementation 用api代替,它是对外部公开的, 所有其他的module就不需要添加该依赖
    api rootProject.ext.dependencies["appcompat_v7"]
    api rootProject.ext.dependencies["constraint_layout"]
    api rootProject.ext.dependencies["cardview-v7"]
    api rootProject.ext.dependencies["recyclerview-v7"]
    api rootProject.ext.dependencies["support-v4"]
    api rootProject.ext.dependencies["design"]
    api rootProject.ext.dependencies["support_annotations"]
    api rootProject.ext.dependencies["junit"]
    api rootProject.ext.dependencies["espresso_core"]
    //MultiDex分包方法
    api rootProject.ext.dependencies["multidex"]
    //黄油刀
    annotationProcessor rootProject.ext.dependencies["butterknife_compiler"]
    api rootProject.ext.dependencies["butterknife"]
    //Arouter路由
    annotationProcessor rootProject.ext.dependencies["arouter_compiler"]
    api rootProject.ext.dependencies["arouter_api"]
    api rootProject.ext.dependencies["arouter_annotation"]
    //eventbus 发布/订阅事件总线
    if (rootProject.ext.isNeedEventBus.toBoolean()) {
        api rootProject.ext.dependencies["eventbus"]
    }
    //网络
    api rootProject.ext.dependencies["okhttp"]
    api rootProject.ext.dependencies["okhttploggerIntecept"]
    api rootProject.ext.dependencies["retrofit"]
    api rootProject.ext.dependencies["retrofitConvert"]
    api rootProject.ext.dependencies["retrofitAdapt"]
    api rootProject.ext.dependencies["rxjava"]
    api rootProject.ext.dependencies["rxAndroid"]
    //日志
    api rootProject.ext.dependencies["logger"]

    //图片加载
    api rootProject.ext.dependencies["glide"]
    api rootProject.ext.dependencies["glide_okhttp"]
    //GreenDao
    if (rootProject.ext.isNeedGreenDao.toBoolean()) {
        api rootProject.ext.dependencies["greenDao"]
    }

    if (rootProject.ext.isNeedDagger.toBoolean()) {
        api rootProject.ext.dependencies["dagger"]
        annotationProcessor rootProject.ext.dependencies["daggerCompile"]
    }
    //友盟
    api rootProject.ext.dependencies["uMeng"]
    api rootProject.ext.dependencies["uMengCommon"]

    //极光推送
    api rootProject.ext.dependencies["jpush"]
    api rootProject.ext.dependencies["jpushCore"]
}
